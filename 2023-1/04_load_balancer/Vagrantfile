# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

Vagrant.configure("2") do |config|
 
 config.vm.define "nginx" do |nginx|
    nginx.vm.box = "centos/7"
    nginx.vm.hostname = "sistemasdistribuidos"
    nginx.vm.network "private_network", ip: "192.168.56.199"
    nginx.vm.network "forwarded_port", guest:80, host:80
    nginx.vm.provider "virtualbox" do |vb|
     vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "nginx"]
    end
    nginx.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/nginx/main.yaml"
      ansible.groups = {
       "nginx" => ["nginx"]
      }

      ansible.extra_vars ={
        "loadbalancer_ip": "192.168.56.200"
      }

    end
  end
 config.vm.define "lb" do |lb|
  lb.vm.box = "centos/7"
  lb.vm.hostname = "loadbalancer"
  lb.vm.network "private_network" , ip: "192.168.56.200"
  lb.vm.provider "virtualbox" do |vb|
   vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "loadbalancer"]
  end
  lb.vm.provision "ansible" do |ansible|
   ansible.playbook = "playbooks/haproxy/loadbalancer.yml"
   ansible.extra_vars = {
   "web_servers" =>[
     {"name": "node-1", "ip":"192.168.56.11"},
     {"name": "node-2", "ip":"192.168.56.12"}
   ]
 
   }
  end
 end

   (1..2).each do |i|
   config.vm.define "web-#{i}" do |web|
     web.vm.box = "centos/7"
     web.vm.network "private_network", ip: "192.168.56.1#{i}"
     web.vm.hostname = "web-#{i}"
     disk_dir = "./disk#{i}.vdi"

     web.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "web-#{i}"]
       unless File.exist?(disk_dir)
        vb.customize ['createhd', '--filename', disk_dir, '--variant', 'Fixed', '--size', 5 * 1024]
       end #end of unless
     vb.customize ['storageattach', :id,  '--storagectl', 'IDE', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk_dir]
     end #end of  vb  
     web.vm.provision "ansible" do |ansible|
     ansible.playbook = "playbooks/httpd/webserver.yml"
       ansible.groups = {
        "webservers" => ["web-#{i}"]
      }
     end
    end
   end
  
   config.vm.define "database" do |oracle_db_server|
    oracle_db_server.vm.box = "centos/7"
    oracle_db_server.vm.hostname = "database"
    disk_dir = "./database.vdi"
    oracle_db_server.vm.network "private_network", ip: "192.168.56.198"
    oracle_db_server.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "oracle_db_server"]
     unless File.exist?(disk_dir)
        vb.customize ['createhd', '--filename', disk_dir, '--variant', 'Fixed', '--size', 5 * 1024]
      end
     vb.customize ['storageattach', :id,  '--storagectl', 'IDE', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk_dir]
    end # end of vb
    oracle_db_server.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/db/database.yml"
      ansible.groups = {
        "database" => ["database"]
      }
    end
  end # end of oracle db server
  
  config.trigger.after :up do |trigger|
    trigger.run = {path: "scripts/glusterconfig.sh"}
  end # end of trigger
  
end #End of config
